package nl.kbresearch.europeana_newspapers.NerAnnotator.output;

import nl.kbresearch.europeana_newspapers.NerAnnotator.TextElementsExtractor;

import org.w3c.dom.Document;


/**
 * Output handler for the result of the NER process on a single ALTO document
 *
 * @author Rene
 * @author Willem Jan Faber
 */


public abstract class ResultHandler {
    //Called at the beginning of the document
    public abstract void startDocument();

    //Called at the beginning of each ALTO textblock
    public abstract void startTextBlock();

    // Return true, if there is a hyphen at the end
    public abstract void newLine(boolean hyphenated);

    /**
     * Called for each token generated by the {@link TextElementsExtractor}
     * after NER processing. This does not include the spaces between the
     * elements.
     * 
     * @param wordid
     *            the reference to the ALTO element.
     * @param originalContent
     *            the uncleaned content of the word. Useful to reconstruct the
     *            original input.
     * @param word
     *            the input used for NER processing. This might include content
     *            from the Element described by continuationid
     * @param label
     *            the label given by the NER processing. Null, if no label was
     *            attached.
     * @param continuationid
     *            if not null, the element referenced by this is the second part
     *            of the same "word".
     */
    public abstract void addToken(String wordid,
                                  String originalContent,
                                  String word,
                                  String label,
                                  String continuationid);

    public abstract void close();

    public abstract void globalShutdown();

    public abstract void setAltoDocument(Document doc);

    public String stanfordLabelToHumanReadable(String label) {
        if (label == null) return null;

        if (label.equals("B-LOC") || label.equals("I-LOC")) {
            return "location";
        }

        if (label.equals("B-ORG") || label.equals("I-ORG")) {
            return "organization";
        }

        if (label.equals("B-MISC") || label.equals("I-MISC")) {
            return "miscellaneous";
        }

        if (label.equals("B-PER") || label.equals("I-PER")) {
            return "person";
        }
        return "unspecified";
    }

    public abstract void stopDocument();

    public abstract void stopTextBlock();
}
